{"version":3,"sources":["Helpers/caretPosition.js","components/Header/Header.js","components/SuggestionBox/SuggestionBox.js","components/TextField/TextField.js","App.js","index.js"],"names":["properties","isBrowser","window","isFirefox","mozInnerScreenX","getCaretCoordinates","element","position","options","Error","debug","el","document","querySelector","parentNode","removeChild","div","createElement","id","body","appendChild","style","computed","getComputedStyle","currentStyle","isInput","nodeName","whiteSpace","wordWrap","visibility","forEach","prop","boxSizing","height","parseInt","outerHeight","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","targetHeight","lineHeight","scrollHeight","overflowY","overflow","textContent","value","substring","replace","span","coordinates","top","offsetTop","left","offsetLeft","backgroundColor","module","exports","Header","className","SuggestionBox","emoji","TextField","useState","textValue","setTextValue","textareaRef","useRef","display","suggestionBoxPosition","setSuggestionBoxPosition","setEmoji","useEffect","textentered","split","keyword","length","relevantEmoji","data","find","item","keywords","includes","ref","onChange","e","target","pos","current","selectionStart","getCursoryPosition","onKeyDown","keyCode","code","preventDefault","placeholder","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c921f21.chunk.js","sourcesContent":["(function () {\r\n    var properties = [\r\n      'direction',\r\n      'boxSizing',\r\n      'width',\r\n      'height',\r\n      'overflowX',\r\n      'overflowY',\r\n    \r\n      'borderTopWidth',\r\n      'borderRightWidth',\r\n      'borderBottomWidth',\r\n      'borderLeftWidth',\r\n      'borderStyle',\r\n    \r\n      'paddingTop',\r\n      'paddingRight',\r\n      'paddingBottom',\r\n      'paddingLeft',\r\n    \r\n      'fontStyle',\r\n      'fontVariant',\r\n      'fontWeight',\r\n      'fontStretch',\r\n      'fontSize',\r\n      'fontSizeAdjust',\r\n      'lineHeight',\r\n      'fontFamily',\r\n    \r\n      'textAlign',\r\n      'textTransform',\r\n      'textIndent',\r\n      'textDecoration',\r\n    \r\n      'letterSpacing',\r\n      'wordSpacing',\r\n    \r\n      'tabSize',\r\n      'MozTabSize'\r\n    \r\n    ];\r\n    \r\n    var isBrowser = (typeof window !== 'undefined');\r\n    var isFirefox = (isBrowser && window.mozInnerScreenX != null);\r\n    \r\n    function getCaretCoordinates(element, position, options) {\r\n      if (!isBrowser) {\r\n        throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\r\n      }\r\n    \r\n      var debug = (options && options.debug) || false;\r\n      if (debug) {\r\n        var el = document.querySelector('#input-textarea-caret-position-mirror-div');\r\n        if (el) el.parentNode.removeChild(el);\r\n      }\r\n    \r\n      var div = document.createElement('div');\r\n      div.id = 'input-textarea-caret-position-mirror-div';\r\n      document.body.appendChild(div);\r\n    \r\n      var style = div.style;\r\n      var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\r\n      var isInput = element.nodeName === 'INPUT';\r\n    \r\n      style.whiteSpace = 'pre-wrap';\r\n      if (!isInput)\r\n        style.wordWrap = 'break-word';\r\n    \r\n      style.position = 'absolute';\r\n      if (!debug)\r\n        style.visibility = 'hidden';\r\n    \r\n      properties.forEach(function (prop) {\r\n        if (isInput && prop === 'lineHeight') {\r\n          if (computed.boxSizing === \"border-box\") {\r\n            var height = parseInt(computed.height);\r\n            var outerHeight =\r\n              parseInt(computed.paddingTop) +\r\n              parseInt(computed.paddingBottom) +\r\n              parseInt(computed.borderTopWidth) +\r\n              parseInt(computed.borderBottomWidth);\r\n            var targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n            if (height > targetHeight) {\r\n              style.lineHeight = height - outerHeight + \"px\";\r\n            } else if (height === targetHeight) {\r\n              style.lineHeight = computed.lineHeight;\r\n            } else {\r\n              style.lineHeight = 0;\r\n            }\r\n          } else {\r\n            style.lineHeight = computed.height;\r\n          }\r\n        } else {\r\n          style[prop] = computed[prop];\r\n        }\r\n      });\r\n    \r\n      if (isFirefox) {\r\n        if (element.scrollHeight > parseInt(computed.height))\r\n          style.overflowY = 'scroll';\r\n      } else {\r\n        style.overflow = 'hidden'; \r\n      }\r\n    \r\n      div.textContent = element.value.substring(0, position);\r\n      if (isInput)\r\n        div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\r\n    \r\n      var span = document.createElement('span');\r\n      span.textContent = element.value.substring(position) || '.'; \r\n      div.appendChild(span);\r\n    \r\n      var coordinates = {\r\n        top: span.offsetTop + parseInt(computed['borderTopWidth']),\r\n        left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\r\n        height: parseInt(computed['lineHeight'])\r\n      };\r\n    \r\n      if (debug) {\r\n        span.style.backgroundColor = '#aaa';\r\n      } else {\r\n        document.body.removeChild(div);\r\n      }\r\n    \r\n      return coordinates;\r\n    }\r\n    \r\n    if (typeof module != 'undefined' && typeof module.exports != 'undefined') {\r\n      module.exports = getCaretCoordinates;\r\n    } else if(isBrowser) {\r\n      window.getCaretCoordinates = getCaretCoordinates;\r\n    }\r\n    \r\n    }());","import \"./styles.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"container-flex-center primarybg header-container\">\r\n            <div className=\"header_logo primaryclr\">\r\n                üèÄ Emoticon Suggestor  ü§î\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import \"./styles.css\";\r\n\r\nconst SuggestionBox = ({ position, emoji }) => {\r\n    return (\r\n        <div className=\"container-flex-center tertiarybg suggestionbox\" style={ position }>\r\n            { emoji }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestionBox\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport SuggestionBox from \"../SuggestionBox/SuggestionBox\";\r\nimport getCaretCoordinates from \"../../Helpers/caretPosition\";\r\nimport data from \"../../data/data.json\";\r\nimport \"./styles.css\";\r\n\r\nconst TOP_OFFSET = -40;\r\nconst ENTER_KEY = 13;\r\n\r\nconst TextField = () => {\r\n\r\n    const [ textValue, setTextValue ] = useState(\"\");\r\n    const textareaRef = useRef(null);\r\n    const [ suggestionBoxPosition, setSuggestionBoxPosition ] = useState({ top: 0, left: 0, display: \"none\" });\r\n    const [ emoji, setEmoji ] = useState(\"...\");\r\n\r\n    useEffect( () => {\r\n        const textentered = textValue.split(\" \");\r\n        const keyword = textentered[textentered.length-1];\r\n        const relevantEmoji = data.find( item => item.keywords.includes(keyword));\r\n        setEmoji(relevantEmoji ? relevantEmoji.emoji : \"...\" );\r\n    }, [ textValue ])\r\n\r\n    const getCursoryPosition = () => {\r\n        const pos = textareaRef.current.selectionStart;\r\n        const { top, left } = getCaretCoordinates(textareaRef.current, pos);\r\n        setSuggestionBoxPosition({ top: top + TOP_OFFSET, left, display: \"flex\" });\r\n    };\r\n\r\n    const onChangeLogic = (e) => {\r\n        setTextValue( e.target.value );\r\n        if( !textValue ) return setSuggestionBoxPosition({ top: 0, left: 0, display: \"none\" })\r\n        getCursoryPosition()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-flex-center textfield_container\">\r\n            <SuggestionBox emoji={emoji} position={suggestionBoxPosition} />\r\n            <textarea\r\n                ref={ textareaRef }\r\n                value={ textValue }\r\n                onChange={ onChangeLogic }\r\n                onKeyDown={ e => {\r\n                    if( emoji !== \"...\" && (e.keyCode === ENTER_KEY || e.code === \"Enter\") ){\r\n                        e.preventDefault();\r\n                        setTextValue(textValue+emoji+\" \");\r\n                        setEmoji(\"...\")\r\n                    }\r\n                }}\r\n                placeholder=\"Type (smile, haha)...\"\r\n            >\r\n            </textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextField","import './App.css';\nimport Header from './components/Header/Header';\nimport TextField from './components/TextField/TextField.js';\n\nfunction App() {\n  return (\n    <div className=\"app_container secondarybg\">\n      <Header />\n      <TextField />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}